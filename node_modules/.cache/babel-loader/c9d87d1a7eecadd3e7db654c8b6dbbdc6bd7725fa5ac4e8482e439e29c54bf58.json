{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\wesourceyou2\\\\frontend\\\\src\\\\pages\\\\Jobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { useSearchParams } from 'react-router-dom';\nimport './Jobs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const {\n    t\n  } = useLanguage();\n  const [searchParams] = useSearchParams();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  useEffect(() => {\n    // TODO: Fetch jobs from API\n    setJobs([{\n      id: 1,\n      title: 'Senior Photojournalist',\n      company: 'Global Media Corp',\n      companyId: 1,\n      location: 'New York, NY',\n      jobType: 'Full-time',\n      salary: '$75,000 - $90,000',\n      description: 'We are seeking an experienced photojournalist to cover international events and breaking news.',\n      postedDate: '2024-01-15'\n    }, {\n      id: 2,\n      title: 'Video Editor',\n      company: 'News Network',\n      companyId: 2,\n      location: 'Los Angeles, CA',\n      jobType: 'Contract',\n      salary: '$60,000 - $80,000',\n      description: 'Looking for a skilled video editor to join our production team.',\n      postedDate: '2024-01-14'\n    }, {\n      id: 3,\n      title: 'Middle East Conflict Correspondent',\n      company: 'Global Media Network',\n      companyId: 1,\n      location: 'Beirut, Lebanon',\n      jobType: 'Freelance',\n      salary: '$5,000 - $8,000',\n      description: 'Seeking experienced journalist to cover ongoing conflicts in the Middle East region.',\n      postedDate: '2024-01-13'\n    }]);\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    if (jobs.length > 0) {\n      let filtered = [...jobs];\n\n      // Filter by company if specified\n      const companyId = searchParams.get('company');\n      if (companyId) {\n        filtered = filtered.filter(job => job.companyId === parseInt(companyId));\n      }\n\n      // Filter by specific job if specified\n      const jobId = searchParams.get('jobId');\n      if (jobId) {\n        filtered = filtered.filter(job => job.id === parseInt(jobId));\n      }\n      setFilteredJobs(filtered);\n    }\n  }, [jobs, searchParams]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: t('common.loading')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  const companyName = searchParams.get('companyName');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: companyName ? `${t('jobs.title')} - ${companyName}` : t('jobs.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('jobs.subtitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), companyName && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"company-filter-notice\",\n        children: [t('jobs.showingJobsFor'), \": \", companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-list\",\n      children: filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"job-type\",\n            children: job.jobType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-company\",\n          children: job.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-location\",\n          children: job.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-salary\",\n          children: job.salary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"job-description\",\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"job-date\",\n            children: [t('jobs.posted'), \": \", job.postedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            children: t('jobs.applyNow')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-jobs\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('jobs.noJobsFound')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"3T+p6/Tqt4CuvQToDdTzcmwCXVE=\", false, function () {\n  return [useLanguage, useSearchParams];\n});\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","useLanguage","useSearchParams","jsxDEV","_jsxDEV","Jobs","_s","t","searchParams","jobs","setJobs","loading","setLoading","filteredJobs","setFilteredJobs","id","title","company","companyId","location","jobType","salary","description","postedDate","length","filtered","get","filter","job","parseInt","jobId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","companyName","map","_c","$RefreshReg$"],"sources":["D:/Work/wesourceyou2/frontend/src/pages/Jobs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLanguage } from '../contexts/LanguageContext';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport './Jobs.css';\r\n\r\nconst Jobs = () => {\r\n  const { t } = useLanguage();\r\n  const [searchParams] = useSearchParams();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // TODO: Fetch jobs from API\r\n    setJobs([\r\n      {\r\n        id: 1,\r\n        title: 'Senior Photojournalist',\r\n        company: 'Global Media Corp',\r\n        companyId: 1,\r\n        location: 'New York, NY',\r\n        jobType: 'Full-time',\r\n        salary: '$75,000 - $90,000',\r\n        description: 'We are seeking an experienced photojournalist to cover international events and breaking news.',\r\n        postedDate: '2024-01-15'\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Video Editor',\r\n        company: 'News Network',\r\n        companyId: 2,\r\n        location: 'Los Angeles, CA',\r\n        jobType: 'Contract',\r\n        salary: '$60,000 - $80,000',\r\n        description: 'Looking for a skilled video editor to join our production team.',\r\n        postedDate: '2024-01-14'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Middle East Conflict Correspondent',\r\n        company: 'Global Media Network',\r\n        companyId: 1,\r\n        location: 'Beirut, Lebanon',\r\n        jobType: 'Freelance',\r\n        salary: '$5,000 - $8,000',\r\n        description: 'Seeking experienced journalist to cover ongoing conflicts in the Middle East region.',\r\n        postedDate: '2024-01-13'\r\n      }\r\n    ]);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (jobs.length > 0) {\r\n      let filtered = [...jobs];\r\n      \r\n      // Filter by company if specified\r\n      const companyId = searchParams.get('company');\r\n      if (companyId) {\r\n        filtered = filtered.filter(job => job.companyId === parseInt(companyId));\r\n      }\r\n      \r\n      // Filter by specific job if specified\r\n      const jobId = searchParams.get('jobId');\r\n      if (jobId) {\r\n        filtered = filtered.filter(job => job.id === parseInt(jobId));\r\n      }\r\n      \r\n      setFilteredJobs(filtered);\r\n    }\r\n  }, [jobs, searchParams]);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">{t('common.loading')}</div>;\r\n  }\r\n\r\n  const companyName = searchParams.get('companyName');\r\n\r\n  return (\r\n    <div className=\"jobs-container\">\r\n      <div className=\"jobs-header\">\r\n        <h1>\r\n          {companyName ? `${t('jobs.title')} - ${companyName}` : t('jobs.title')}\r\n        </h1>\r\n        <p>{t('jobs.subtitle')}</p>\r\n        {companyName && (\r\n          <p className=\"company-filter-notice\">\r\n            {t('jobs.showingJobsFor')}: {companyName}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"jobs-list\">\r\n        {filteredJobs.length > 0 ? (\r\n          filteredJobs.map(job => (\r\n            <div key={job.id} className=\"job-card\">\r\n              <div className=\"job-header\">\r\n                <h3>{job.title}</h3>\r\n                <span className=\"job-type\">{job.jobType}</span>\r\n              </div>\r\n              <div className=\"job-company\">{job.company}</div>\r\n              <div className=\"job-location\">{job.location}</div>\r\n              <div className=\"job-salary\">{job.salary}</div>\r\n              <p className=\"job-description\">{job.description}</p>\r\n              <div className=\"job-footer\">\r\n                <span className=\"job-date\">{t('jobs.posted')}: {job.postedDate}</span>\r\n                <button className=\"apply-button\">{t('jobs.applyNow')}</button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"no-jobs\">\r\n            <p>{t('jobs.noJobsFound')}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}