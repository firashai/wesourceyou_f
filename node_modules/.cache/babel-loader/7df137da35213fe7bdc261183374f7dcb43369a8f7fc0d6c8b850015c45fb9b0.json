{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\wesourceyou2\\\\frontend\\\\src\\\\pages\\\\admin\\\\AdminJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FiCheck, FiX, FiEye, FiEdit } from 'react-icons/fi';\nimport EditDialog from '../../components/admin/EditDialog';\nimport './AdminJobs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminJobs = () => {\n  _s();\n  var _selectedJob$company, _selectedJob$descript;\n  const {\n    t\n  } = useTranslation();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [filter, setFilter] = useState('all'); // all, approved, pending\n  const [showModal, setShowModal] = useState(false);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [action, setAction] = useState(''); // approve or reject\n  const [notes, setNotes] = useState('');\n  const fetchJobs = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const approved = filter === 'all' ? undefined : filter === 'approved';\n      const response = await fetch(`http://localhost:3001/admin/jobs?page=${currentPage}&limit=10${approved !== undefined ? `&approved=${approved}` : ''}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setJobs(data.jobs);\n        setTotalPages(data.totalPages);\n      } else {\n        console.error('Failed to fetch jobs');\n      }\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, [currentPage, filter]);\n  const handleApproval = async (jobId, approved) => {\n    setSelectedJob(jobs.find(job => job.id === jobId));\n    setAction(approved ? 'approve' : 'reject');\n    setShowModal(true);\n  };\n  const confirmApproval = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:3001/admin/jobs/${selectedJob.id}/approve`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          approved: action === 'approve',\n          notes: notes\n        })\n      });\n      if (response.ok) {\n        setShowModal(false);\n        setSelectedJob(null);\n        setAction('');\n        setNotes('');\n        fetchJobs();\n      } else {\n        console.error('Failed to update job approval status');\n      }\n    } catch (error) {\n      console.error('Error updating job approval status:', error);\n    }\n  };\n  const handleBulkApproval = async approved => {\n    if (selectedJobs.length === 0) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:3001/admin/jobs/bulk-approve`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          jobIds: selectedJobs,\n          approved: approved\n        })\n      });\n      if (response.ok) {\n        setSelectedJobs([]);\n        fetchJobs();\n      } else {\n        console.error('Failed to bulk update jobs');\n      }\n    } catch (error) {\n      console.error('Error bulk updating jobs:', error);\n    }\n  };\n  const toggleSelection = jobId => {\n    setSelectedJobs(prev => prev.includes(jobId) ? prev.filter(id => id !== jobId) : [...prev, jobId]);\n  };\n  const selectAll = () => {\n    if (selectedJobs.length === jobs.length) {\n      setSelectedJobs([]);\n    } else {\n      setSelectedJobs(jobs.map(job => job.id));\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-jobs-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-jobs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t('admin.jobs.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('admin.jobs.subtitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'all' ? 'active' : '',\n          onClick: () => setFilter('all'),\n          children: t('admin.filters.all')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'approved' ? 'active' : '',\n          onClick: () => setFilter('approved'),\n          children: t('admin.filters.approved')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'pending' ? 'active' : '',\n          onClick: () => setFilter('pending'),\n          children: t('admin.filters.pending')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), selectedJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bulk-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bulk-approve\",\n          onClick: () => handleBulkApproval(true),\n          children: [/*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), \" \", t('admin.bulkApprove')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bulk-reject\",\n          onClick: () => handleBulkApproval(false),\n          children: [/*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), \" \", t('admin.bulkReject')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"jobs-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedJobs.length === jobs.length && jobs.length > 0,\n                onChange: selectAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('admin.jobs.title')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('admin.jobs.company')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('admin.jobs.jobType')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('admin.jobs.status')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('admin.jobs.createdAt')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t('admin.actions')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: jobs.map(job => {\n            var _job$description, _job$company;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedJobs.includes(job.id),\n                  onChange: () => toggleSelection(job.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"job-title\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"job-description\",\n                    children: [(_job$description = job.description) === null || _job$description === void 0 ? void 0 : _job$description.substring(0, 100), \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_job$company = job.company) === null || _job$company === void 0 ? void 0 : _job$company.name) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.jobType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${job.isApproved ? 'approved' : 'pending'}`,\n                  children: job.isApproved ? t('admin.status.approved') : t('admin.status.pending')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(job.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-btn\",\n                  onClick: () => window.open(`/jobs?jobId=${job.id}`, '_blank'),\n                  children: /*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"approve-btn\",\n                  onClick: () => handleApproval(job.id, true),\n                  disabled: job.isApproved,\n                  children: /*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"reject-btn\",\n                  onClick: () => handleApproval(job.id, false),\n                  disabled: !job.isApproved,\n                  children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, job.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.max(1, prev - 1)),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.min(totalPages, prev + 1)),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: action === 'approve' ? t('admin.approveJob') : t('admin.rejectJob')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: action === 'approve' ? t('admin.approveJobConfirm') : t('admin.rejectJobConfirm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: selectedJob === null || selectedJob === void 0 ? void 0 : selectedJob.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 20\n              }, this), \" \", selectedJob === null || selectedJob === void 0 ? void 0 : (_selectedJob$company = selectedJob.company) === null || _selectedJob$company === void 0 ? void 0 : _selectedJob$company.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Job Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 20\n              }, this), \" \", selectedJob === null || selectedJob === void 0 ? void 0 : selectedJob.jobType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 20\n              }, this), \" \", selectedJob === null || selectedJob === void 0 ? void 0 : (_selectedJob$descript = selectedJob.description) === null || _selectedJob$descript === void 0 ? void 0 : _selectedJob$descript.substring(0, 200), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notes-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"notes\",\n              children: \"Notes (optional):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"notes\",\n              value: notes,\n              onChange: e => setNotes(e.target.value),\n              placeholder: \"Add any notes about this decision...\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setShowModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: action === 'approve' ? 'approve-btn' : 'reject-btn',\n            onClick: confirmApproval,\n            children: action === 'approve' ? 'Approve' : 'Reject'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminJobs, \"Xlgq81YAZlT7cgGHU1YlqZC5ksA=\", false, function () {\n  return [useTranslation];\n});\n_c = AdminJobs;\nexport default AdminJobs;\nvar _c;\n$RefreshReg$(_c, \"AdminJobs\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","FiCheck","FiX","FiEye","FiEdit","EditDialog","jsxDEV","_jsxDEV","AdminJobs","_s","_selectedJob$company","_selectedJob$descript","t","jobs","setJobs","loading","setLoading","selectedJobs","setSelectedJobs","currentPage","setCurrentPage","totalPages","setTotalPages","filter","setFilter","showModal","setShowModal","selectedJob","setSelectedJob","action","setAction","notes","setNotes","fetchJobs","token","localStorage","getItem","approved","undefined","response","fetch","headers","ok","data","json","console","error","handleApproval","jobId","find","job","id","confirmApproval","method","body","JSON","stringify","handleBulkApproval","length","jobIds","toggleSelection","prev","includes","selectAll","map","formatDate","dateString","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","onChange","_job$description","_job$company","title","description","substring","company","name","jobType","isApproved","createdAt","window","open","disabled","Math","max","min","e","stopPropagation","htmlFor","value","target","placeholder","rows","_c","$RefreshReg$"],"sources":["D:/Work/wesourceyou2/frontend/src/pages/admin/AdminJobs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FiCheck, FiX, FiEye, FiEdit } from 'react-icons/fi';\r\nimport EditDialog from '../../components/admin/EditDialog';\r\nimport './AdminJobs.css';\r\n\r\nconst AdminJobs = () => {\r\n  const { t } = useTranslation();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedJobs, setSelectedJobs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [filter, setFilter] = useState('all'); // all, approved, pending\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [action, setAction] = useState(''); // approve or reject\r\n  const [notes, setNotes] = useState('');\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n      const approved = filter === 'all' ? undefined : filter === 'approved';\r\n      \r\n      const response = await fetch(`http://localhost:3001/admin/jobs?page=${currentPage}&limit=10${approved !== undefined ? `&approved=${approved}` : ''}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setJobs(data.jobs);\r\n        setTotalPages(data.totalPages);\r\n      } else {\r\n        console.error('Failed to fetch jobs');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching jobs:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, [currentPage, filter]);\r\n\r\n  const handleApproval = async (jobId, approved) => {\r\n    setSelectedJob(jobs.find(job => job.id === jobId));\r\n    setAction(approved ? 'approve' : 'reject');\r\n    setShowModal(true);\r\n  };\r\n\r\n  const confirmApproval = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:3001/admin/jobs/${selectedJob.id}/approve`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          approved: action === 'approve',\r\n          notes: notes,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setShowModal(false);\r\n        setSelectedJob(null);\r\n        setAction('');\r\n        setNotes('');\r\n        fetchJobs();\r\n      } else {\r\n        console.error('Failed to update job approval status');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating job approval status:', error);\r\n    }\r\n  };\r\n\r\n  const handleBulkApproval = async (approved) => {\r\n    if (selectedJobs.length === 0) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:3001/admin/jobs/bulk-approve`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          jobIds: selectedJobs,\r\n          approved: approved,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSelectedJobs([]);\r\n        fetchJobs();\r\n      } else {\r\n        console.error('Failed to bulk update jobs');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error bulk updating jobs:', error);\r\n    }\r\n  };\r\n\r\n  const toggleSelection = (jobId) => {\r\n    setSelectedJobs(prev => \r\n      prev.includes(jobId) \r\n        ? prev.filter(id => id !== jobId)\r\n        : [...prev, jobId]\r\n    );\r\n  };\r\n\r\n  const selectAll = () => {\r\n    if (selectedJobs.length === jobs.length) {\r\n      setSelectedJobs([]);\r\n    } else {\r\n      setSelectedJobs(jobs.map(job => job.id));\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"admin-jobs-container\">\r\n        <div className=\"loading\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-jobs-container\">\r\n      <div className=\"page-header\">\r\n        <h1>{t('admin.jobs.title')}</h1>\r\n        <p>{t('admin.jobs.subtitle')}</p>\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <div className=\"filters\">\r\n          <button \r\n            className={filter === 'all' ? 'active' : ''} \r\n            onClick={() => setFilter('all')}\r\n          >\r\n            {t('admin.filters.all')}\r\n          </button>\r\n          <button \r\n            className={filter === 'approved' ? 'active' : ''} \r\n            onClick={() => setFilter('approved')}\r\n          >\r\n            {t('admin.filters.approved')}\r\n          </button>\r\n          <button \r\n            className={filter === 'pending' ? 'active' : ''} \r\n            onClick={() => setFilter('pending')}\r\n          >\r\n            {t('admin.filters.pending')}\r\n          </button>\r\n        </div>\r\n\r\n        {selectedJobs.length > 0 && (\r\n          <div className=\"bulk-actions\">\r\n            <button \r\n              className=\"bulk-approve\"\r\n              onClick={() => handleBulkApproval(true)}\r\n            >\r\n              <FiCheck /> {t('admin.bulkApprove')}\r\n            </button>\r\n            <button \r\n              className=\"bulk-reject\"\r\n              onClick={() => handleBulkApproval(false)}\r\n            >\r\n              <FiX /> {t('admin.bulkReject')}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"jobs-table-container\">\r\n        <table className=\"jobs-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <input \r\n                  type=\"checkbox\" \r\n                  checked={selectedJobs.length === jobs.length && jobs.length > 0}\r\n                  onChange={selectAll}\r\n                />\r\n              </th>\r\n              <th>{t('admin.jobs.title')}</th>\r\n              <th>{t('admin.jobs.company')}</th>\r\n              <th>{t('admin.jobs.jobType')}</th>\r\n              <th>{t('admin.jobs.status')}</th>\r\n              <th>{t('admin.jobs.createdAt')}</th>\r\n              <th>{t('admin.actions')}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {jobs.map(job => (\r\n              <tr key={job.id}>\r\n                <td>\r\n                  <input \r\n                    type=\"checkbox\" \r\n                    checked={selectedJobs.includes(job.id)}\r\n                    onChange={() => toggleSelection(job.id)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <div className=\"job-title\">\r\n                    <strong>{job.title}</strong>\r\n                    <span className=\"job-description\">{job.description?.substring(0, 100)}...</span>\r\n                  </div>\r\n                </td>\r\n                <td>{job.company?.name || 'N/A'}</td>\r\n                <td>{job.jobType}</td>\r\n                <td>\r\n                  <span className={`status-badge ${job.isApproved ? 'approved' : 'pending'}`}>\r\n                    {job.isApproved ? t('admin.status.approved') : t('admin.status.pending')}\r\n                  </span>\r\n                </td>\r\n                <td>{formatDate(job.createdAt)}</td>\r\n                <td className=\"action-buttons\">\r\n                  <button \r\n                    className=\"view-btn\"\r\n                    onClick={() => window.open(`/jobs?jobId=${job.id}`, '_blank')}\r\n                  >\r\n                    <FiEye />\r\n                  </button>\r\n                  <button \r\n                    className=\"approve-btn\"\r\n                    onClick={() => handleApproval(job.id, true)}\r\n                    disabled={job.isApproved}\r\n                  >\r\n                    <FiCheck />\r\n                  </button>\r\n                  <button \r\n                    className=\"reject-btn\"\r\n                    onClick={() => handleApproval(job.id, false)}\r\n                    disabled={!job.isApproved}\r\n                  >\r\n                    <FiX />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {totalPages > 1 && (\r\n        <div className=\"pagination\">\r\n          <button \r\n            onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Previous\r\n          </button>\r\n          <span>Page {currentPage} of {totalPages}</span>\r\n          <button \r\n            onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\r\n            disabled={currentPage === totalPages}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Approval Modal */}\r\n      {showModal && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowModal(false)}>\r\n          <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n            <h3>\r\n              {action === 'approve' \r\n                ? t('admin.approveJob') \r\n                : t('admin.rejectJob')\r\n              }\r\n            </h3>\r\n            <p>\r\n              {action === 'approve' \r\n                ? t('admin.approveJobConfirm') \r\n                : t('admin.rejectJobConfirm')\r\n              }\r\n            </p>\r\n            <div className=\"modal-content\">\r\n              <div className=\"job-details\">\r\n                <h4>{selectedJob?.title}</h4>\r\n                <p><strong>Company:</strong> {selectedJob?.company?.name}</p>\r\n                <p><strong>Job Type:</strong> {selectedJob?.jobType}</p>\r\n                <p><strong>Description:</strong> {selectedJob?.description?.substring(0, 200)}...</p>\r\n              </div>\r\n              <div className=\"notes-section\">\r\n                <label htmlFor=\"notes\">Notes (optional):</label>\r\n                <textarea\r\n                  id=\"notes\"\r\n                  value={notes}\r\n                  onChange={(e) => setNotes(e.target.value)}\r\n                  placeholder=\"Add any notes about this decision...\"\r\n                  rows=\"3\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-actions\">\r\n              <button \r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowModal(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                className={action === 'approve' ? 'approve-btn' : 'reject-btn'}\r\n                onClick={confirmApproval}\r\n              >\r\n                {action === 'approve' ? 'Approve' : 'Reject'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminJobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}